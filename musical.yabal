
const var pixels = create_pointer(61439)
// const var channelA="00 01 02 03 04 05 06 07 08 09 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 30 28 27 26 25 24 23 22 21 20 19 18 17 16 15 14 13 12 11 10 09 08 07 06 05 04 03 02 01 00"
const var channelA = "25 25 25 25 25 00 00 25 25 25 25 25 00 00 00 00 00 25 25 25 25 25 00 00 00 00 20 20 20 20 20 00 00 00 00 25 25 25 25 25 00 00 00 00 30 30 30 30 30 30 30 30 00 00 00 00 00 00 00 15 15 15 15 15 15 00 00 00 00 00 00 00 00 00 00 00 13 13 13 13 13 00 00 00 00 00 15 15 15 15 15 00 00 00 00 00 13 13 13 13 13 00 00 00 17 17 17 17 17 00 00 00 19 19 19 19 19 00 00 00 19 19 19 19 19 00 00 00 17 17 17 17 17 00 00 00 15 15 15 15 15 00 00 00 00 00 00"
const var channelB = "13 13 13 13 13 00 00 13 13 13 13 13 00 00 00 00 00 13 13 13 13 13 00 00 00 00 10 10 10 10 10 00 00 00 00 13 13 13 13 13 00 00 00 00 15 15 15 15 15 15 15 15 00 00 00 00 00 00 00 07 07 07 07 07 07 00 00 00 00 00 00 00 00 00 00 00 20 20 20 20 20 00 00 00 00 00 10 10 10 10 10 00 00 00 00 00 10 10 10 10 10 00 00 00 10 10 10 10 10 00 00 00 11 11 11 11 11 00 00 00 11 11 11 11 11 00 00 00 10 10 10 10 10 00 00 00 10 10 10 10 10 00 00 00 00 00 00"
const var channelC = "00 00 00 00 00"
const var channelD = "07 07 07 00 00 00 00 07 07 07 00 00 00 00 00 00 07 07 07 00 00 00 00 00 00 07 07 07 00 00 00 00 00 00 00 07 07 07 00 00 00 00 00 00 07 07 07 00 00 00 00 00 00 00 00 00 00 00 07 07 07 00 00 00"
// const var channelC = "03 03 03 03 03 03 00 00 00 00 06 06 06 06 06 06 00 00 00 00 03 03 03 03 03 03 00 00 00 00 06 06 06 06 06 06 00 00 00 00 03 03 03 03 03 03 00 00 00 00 05 05 05 05 05 05 00 00 00 00 03 03 03 03 03 03 00 00 00 00 05 05 05 05 05 05 00 00 00 00 00 00 00"
// const var channelD = "25 30 30 00 00 00 00 00 00 12 12 00 00 00 00 00 00 00 00 00 25 30 30 00 00 00 00 00 00 12 12 00 00 00 00 00 00 00 00 00 25 30 30 00 00 00 00 00 00 12 12 00 00 00 00 00 00 00 00 00 25 30 30 00 00 00 00 00 00 12 12 00 00 00 00 00 00 00 00 00 25 30 30"

const var chars = create_pointer(61294)
const var title = "musical"

var noteVal = 0
var freqVal = 15


// Print title to char mem
for(var i = 0; i < sizeof(title); i++){
    chars[i] = title[i]
}



while (true) {
    var i = 0

    // Iterate through all notes and play them
    var maxSize = sizeof(channelA)
    maxSize -= 1
    while(i < maxSize) {
        if(channelA[i] == ' '){
            i += 1
        }
        
        ///////////////
        // Channel A //
        ///////////////


        // Process new note
        
        freqVal = 0
        // Get first digit of frequency
        if (channelA[i] == '0'){
            freqVal = 0
        }
        if (channelA[i] == '1'){
            freqVal = 10
        }
        if (channelA[i] == '2'){
            freqVal = 20
        }
        if (channelA[i] == '3'){
            freqVal = 30
        }

        // Get second digit of frequency
        if (channelA[i+1] == '0'){
            freqVal += 0
        }
        if (channelA[i+1] == '1'){
            freqVal += 1
        }
        if (channelA[i+1] == '2'){
            freqVal += 2
        }
        if (channelA[i+1] == '3'){
            freqVal += 3
        }
        if (channelA[i+1] == '4'){
            freqVal += 4
        }
        if (channelA[i+1] == '5'){
            freqVal += 5
        }
        if (channelA[i+1] == '6'){
            freqVal += 6
        }
        if (channelA[i+1] == '7'){
            freqVal += 7
        }
        if (channelA[i+1] == '8'){
            freqVal += 8
        }
        if (channelA[i+1] == '9'){
            freqVal += 9
        }
        
        // Shift left
        freqVal = freqVal << 11

        // // Also add channel ID
        freqVal += 256

        // Write note value to expansion port
        asm{
            AIN @freqVal
            WREXP
        }



        ///////////////
        // Channel B //
        ///////////////

        if(i < sizeof(channelB)){
            // Process new note

            freqVal = 0
            // Get first digit of frequency
            if (channelB[i] == '0'){
                freqVal = 0
            }
            if (channelB[i] == '1'){
                freqVal = 10
            }
            if (channelB[i] == '2'){
                freqVal = 20
            }
            if (channelB[i] == '3'){
                freqVal = 30
            }

            // Get second digit of frequency
            if (channelB[i+1] == '0'){
                freqVal += 0
            }
            if (channelB[i+1] == '1'){
                freqVal += 1
            }
            if (channelB[i+1] == '2'){
                freqVal += 2
            }
            if (channelB[i+1] == '3'){
                freqVal += 3
            }
            if (channelB[i+1] == '4'){
                freqVal += 4
            }
            if (channelB[i+1] == '5'){
                freqVal += 5
            }
            if (channelB[i+1] == '6'){
                freqVal += 6
            }
            if (channelB[i+1] == '7'){
                freqVal += 7
            }
            if (channelB[i+1] == '8'){
                freqVal += 8
            }
            if (channelB[i+1] == '9'){
                freqVal += 9
            }

            // Shift left
            freqVal = freqVal << 11

            // // Also add channel ID
            freqVal += 512

            // Write note value to expansion port
            asm{
                AIN @freqVal
                WREXP
            }
        }



        ///////////////
        // Channel C //
        ///////////////

        if(i < sizeof(channelC)){
            // Process new note

            freqVal = 0
            // Get first digit of frequency
            if (channelC[i] == '0'){
                freqVal = 0
            }
            if (channelC[i] == '1'){
                freqVal = 10
            }
            if (channelC[i] == '2'){
                freqVal = 20
            }
            if (channelC[i] == '3'){
                freqVal = 30
            }

            // Get second digit of frequency
            if (channelC[i+1] == '0'){
                freqVal += 0
            }
            if (channelC[i+1] == '1'){
                freqVal += 1
            }
            if (channelC[i+1] == '2'){
                freqVal += 2
            }
            if (channelC[i+1] == '3'){
                freqVal += 3
            }
            if (channelC[i+1] == '4'){
                freqVal += 4
            }
            if (channelC[i+1] == '5'){
                freqVal += 5
            }
            if (channelC[i+1] == '6'){
                freqVal += 6
            }
            if (channelC[i+1] == '7'){
                freqVal += 7
            }
            if (channelC[i+1] == '8'){
                freqVal += 8
            }
            if (channelC[i+1] == '9'){
                freqVal += 9
            }

            // Shift left
            freqVal = freqVal << 11

            // // Also add channel ID
            freqVal += 768

            // Write note value to expansion port
            asm{
                AIN @freqVal
                WREXP
            }
        }



        ///////////////
        // Channel D //
        ///////////////

        if(i < sizeof(channelD)){
            // Process new note

            freqVal = 0
            // Get first digit of frequency
            if (channelD[i] == '0'){
                freqVal = 0
            }
            if (channelD[i] == '1'){
                freqVal = 10
            }
            if (channelD[i] == '2'){
                freqVal = 20
            }
            if (channelD[i] == '3'){
                freqVal = 30
            }

            // Get second digit of frequency
            if (channelD[i+1] == '0'){
                freqVal += 0
            }
            if (channelD[i+1] == '1'){
                freqVal += 1
            }
            if (channelD[i+1] == '2'){
                freqVal += 2
            }
            if (channelD[i+1] == '3'){
                freqVal += 3
            }
            if (channelD[i+1] == '4'){
                freqVal += 4
            }
            if (channelD[i+1] == '5'){
                freqVal += 5
            }
            if (channelD[i+1] == '6'){
                freqVal += 6
            }
            if (channelD[i+1] == '7'){
                freqVal += 7
            }
            if (channelD[i+1] == '8'){
                freqVal += 8
            }
            if (channelD[i+1] == '9'){
                freqVal += 9
            }

            // Shift left
            freqVal = freqVal << 11

            // // Also add channel ID
            freqVal += 1024

            // Write note value to expansion port
            asm{
                AIN @freqVal
                WREXP
            }
        }




        // Delay for the next set of notes
        for (var l = 0; l < 9000; l++){
            for (var o = 0; o < 1; o++){
                // Do nothing  _(¦3」∠)_
            }
        }

        i += 3
    }
}


    
while (true) {

}