#AS

////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// This is a very simple typing program. All of the letters and many symbols can be typed with your keyboard. //
// You can also delete previously typed characters with the BACKSPACE key.                                    //
////////////////////////////////////////////////////////////////////////////////////////////////////////////////


change $chMemOffset = 53546
change $charCount = 0
change $cursorChar = 8
change $lastKey = 168
change $expLoc = 53500
change $expLoc2 = 53502
change $pressed = 0

// Cursor/clear character
add $chMemOffset,$charCount -> $actualAddress
change *[1]$actualAddress = $cursorChar

#mainLoop // Main loop

// Get any key press
change $key = *[1]$expLoc
define $mask = 32768
and $key,$mask -> $pressed
define $big = 32767
and $key,$big -> $key

change $randColor = 27389


// If the user is pressing a key
if $key!=168:
	// Only get 1 key press if the user holds it down
	if $key!=$lastKey:
		if $pressed==$mask:
			if $key==70: // If backspace key pressed
				if $charCount>0:
					// Clear character
					add $chMemOffset,$charCount -> $actualAddress
					change *[1]$actualAddress = 0

					// Move backward in memory
					sub $charCount,1 -> $charCount
					// Cursor character
					add $chMemOffset,$charCount -> $actualAddress
					change *[1]$actualAddress = $cursorChar
				endif
			endif

			if $key!=70: // If backspace key is NOT pressed
				// Put character into memory
				add $chMemOffset,$charCount -> $actualAddress
				and $randColor,0b11111111 -> $randColor
				bsl $randColor,8 -> $randColor
				add $key,$randColor -> $coloredKey // Set the color using new system.
				change *[1]$actualAddress = $coloredKey

				add $randColor,$coloredKey -> $randColor
				mult $randColor,$charCount -> $randColor
				
				// Increment character position
				add $charCount,1 -> $charCount

				// Cursor/clear character
				add $chMemOffset,$charCount -> $actualAddress
				change *[1]$actualAddress = $cursorChar

				// Reset character count if exceeds char limit
				if $charCount==324:
					change $charCount = 0
				endif
			endif

			change $lastKey = $key
			change *[1]$expLoc2 = 23424

			asm"
			vbuf
			"
		endif
	endif
	// // If the same key is getting held
	// if $key==$lastKey:
	// 	//if $pressed==$mask:
	// 		add $chMemOffset,$charCount -> $actualAddress
	// 		change $tCursor = 3
	// 		change *[1]$actualAddress = $tCursor
	// 	//endif
	// endif
endif

// If the user releases the key, reset lastkey
if $key==168:
		change $lastKey = $key
endif
if $pressed!=$mask:
		change $lastKey = $key
endif


goto #mainLoop
